# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "trunk" ]
  pull_request:
    branches: [ "trunk" ]

env:
  ARTIFACT_NAME: ifc2rdftool
  MAJOR_VERSION: '0'
  MINOR_VERSION: '2'
  PATCH_VERSION: ${{ github.run_number }}


permissions:
  contents: read

jobs:
  build-for-ubuntu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run lint
      run: |
        pylint ifc2rdftool
    - name: Run tests
      run: |
        pytest
    - name: Upload the artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ifc2rdftool/

  build-for-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint pytest
        if (Test-Path requirements.txt) {
          pip install -r requirements.txt
        }
    - name: Run lint
      run: |
        pylint ifc2rdftool
    - name: Run tests
      run: |
        pytest


  build-for-macos:

        runs-on: macos-latest

        steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.10
          uses: actions/setup-python@v5
          with:
              python-version: "3.10"
        - name: Install dependencies
          run: |
              python -m pip install --upgrade pip
              pip install pylint pytest
              if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Run lint
          run: |
              pylint ifc2rdftool
        - name: Run tests
          run: |
              pytest

  release-project:
    name: Release-project-ubuntu
    runs-on:
      - ubuntu-latest
    needs:
      - build-for-ubuntu
      - build-for-windows
      - build-for-macos
    # if: github.event_name == 'push'
    steps:
      - name: Set up version
        id: version
        run: |
          echo "VERSION=${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${{ env.PATCH_VERSION }}" >> $GITHUB_ENV

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Test artifact download
        run: ls -R

      - name: Archive module content
        uses: thedoctor0/zip-release@0.7.5
        with:
          filename: ${{ env.ARTIFACT_NAME }}.zip
          exclusions: '*.git* /*node_modules/* .editorconfig /*__pycache__/* *.pyc'

      - name: Tag
        id: tag
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: trunk
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

      - name: Github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.tag }}
          release_name: Release v${{ steps.tag }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./${{ env.ARTIFACT_NAME }}.zip
          asset_name: ifc2rdftool.zip
          asset_content_type: application/zip
